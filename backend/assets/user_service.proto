syntax = "proto2";

option go_package = "github.com/htchan/UserService/backend/grpc";

package grpc;

service UserService {
  rpc Signup (SignupParams) returns (AuthToken) {}
  rpc Dropout (AuthToken) returns (Result) {}
  rpc Login (LoginParams) returns (TokenWithUrl) {}
  rpc Logout (AuthToken) returns (Result) {}
  rpc RegisterService (ServiceName) returns (AuthToken) {}
  rpc UnregisterService (AuthToken) returns (Result) {}
  # authenticate ensure user has permission
  rpc Authenticate (AuthenticateParams) returns (Result) {}
  # authorize grant user permission
  rpc Authorize (AuthorizeParams) returns (Result) {}
  rpc RegisterPermission (TokenWithPermission) returns (Result) {}
  rpc UnregisterPermission (TokenWithPermission) returns (Result) {}
}

message AuthToken {
  required string token = 1;
}

message Result {
  required string result = 1;
}

message ServiceName {
  required string name = 1;
  required string url = 2;
}

message AuthorizeParams {
  required string token = 1;
  required string userUUID = 2;
  required string permission = 3;
}

message SignupParams {
  required string username = 1;
  required string password = 2;
}

message LoginParams {
  required string username = 1;
  required string password = 2;
  required string service = 3;
}

message AuthenticateParams {
  required string userToken = 1;
  required string serviceToken = 2;
  optional string permission = 3;
}

message TokenWithPermission {
  required string token = 1;
  required string permission = 2;
}

message TokenWithUrl {
  required string token = 1;
  required string url = 2;
}